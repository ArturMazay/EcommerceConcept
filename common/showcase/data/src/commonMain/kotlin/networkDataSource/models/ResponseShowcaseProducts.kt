package networkDataSource.modelsimport kotlinx.serialization.SerialNameimport kotlinx.serialization.Serializableimport models.*@Serializabledata class ResponseShowcaseProducts(    @SerialName("best_seller")    val bestSeller: List<ResponseBestSeller>,    @SerialName("home_store")    val homeStore: List<ResponseHomeStore>,)@Serializabledata class ResponseHomeStore(    @SerialName("id") val id: Int,    @SerialName("title") val title: String,    @SerialName("subtitle") val subtitle: String,    @SerialName("picture") val picture: String,    @SerialName("is_buy") val isBuy: Boolean,    @SerialName("is_new") val isNew: Boolean,)@Serializabledata class ResponseBestSeller(    @SerialName("id") val id: Int,    @SerialName("is_favorites") val isFavorites: Boolean,    @SerialName("title") val title: String,    @SerialName("price_without_discount") val priceWithoutDiscount: Int,    @SerialName("discount_price") val discountPrice: Int,    @SerialName("picture") val picture: String,)fun ResponseShowcaseProducts.mapToProducts(    responseHomeStoreItem: List<ResponseHomeStore>,    responseBestSeller: List<ResponseBestSeller>,): Products =    Products(        homeStore = mapToHomeStoreItem(responseHomeStoreItem = responseHomeStoreItem),        bestSeller = mapToBestSellerItem(responseBestSeller = responseBestSeller),    )fun mapToHomeStoreItem(responseHomeStoreItem: List<ResponseHomeStore>): List<HomeStore> =    responseHomeStoreItem.map { list ->        HomeStore(subtitle = list.subtitle,            id = list.id,            title = list.title,            picture = list.picture,            isBuy = list.isBuy,            isNew = list.isNew)    }fun mapToBestSellerItem(responseBestSeller: List<ResponseBestSeller>): List<BestSeller> =    responseBestSeller.map { list ->        BestSeller(            id = list.id,            isFavorites = list.isFavorites,            discountPrice = list.discountPrice,            title = list.title,            priceWithoutDiscount = list.priceWithoutDiscount,            picture = list.picture        )    }